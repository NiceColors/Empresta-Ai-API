generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
    referentialIntegrity = "prisma"
}

model Employee {
    id          String      @id @unique @default(uuid())
    email       String      @unique
    password    String
    UserToken   UserToken[]
    role        Role        @default(INTERN)
    permissions String      @default("[]")
    name        String
    cpf         String      @unique
    birthdate   DateTime
    Loan        Loan[]
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}

model Client {
    id        String   @id @unique @default(uuid())
    name      String
    cpf       String   @unique
    birthdate DateTime
    Loan      Loan[]
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
}

model Loan {
    id         String   @id @unique @default(uuid())
    employee   Employee @relation(fields: [employeeId], references: [id])
    employeeId String
    client     Client   @relation(fields: [clientId], references: [id])
    clientId   String
    status     Boolean  @default(true)
    book       Book     @relation(fields: [bookId], references: [id])
    bookId     String
    startDate  DateTime @default(now())
    endDate    DateTime
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model Book {
    id          String   @id @unique @default(uuid())
    title       String   @db.VarChar(255)
    status      Boolean  @default(false)
    author      String   @default("") @db.VarChar(200)
    loanRate    Float    @default(5)
    synopsis    String   @default("") @db.Text
    pages       Int      @default(0)
    publisher   String   @default("") @db.VarChar(100)
    isbn        String   @default("") @db.VarChar(100)
    bannerUrl   String   @default("") @db.Text
    releaseYear DateTime @default(now())
    Loan        Loan[]
    createdAt   DateTime @default(now())
    updatedAt   DateTime @default(now()) @updatedAt
}

model UserToken {
    id           String   @id @default(uuid())
    employee     Employee @relation(fields: [employeeId], references: [id])
    employeeId   String
    refreshToken String   @db.Text()
    expires      DateTime
    createdAt    DateTime @default(now())
}

enum Role {
    MANAGER
    INTERN
}
